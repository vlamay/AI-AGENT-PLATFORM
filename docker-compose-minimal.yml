version: '3.8'

services:
  # ============================================
  # OLLAMA - LOCAL LLM (FREE)
  # ============================================
  ollama:
    image: ollama/ollama:latest
    container_name: ai-platform-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
    restart: unless-stopped
    # Uncomment for GPU support on your NVIDIA GPU
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # ============================================
  # POSTGRESQL - DATABASE
  # ============================================
  postgres:
    image: postgres:16-alpine
    container_name: ai-platform-db
    environment:
      POSTGRES_DB: ai_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_secure_pass_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5433:5432"  # Changed from 5432 to avoid conflict
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # REDIS - CACHE
  # ============================================
  redis:
    image: redis:7-alpine
    container_name: ai-platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_secure_pass_2024
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ============================================
  # N8N - WORKFLOW AUTOMATION (OPTIONAL)
  # ============================================
  n8n:
    image: n8nio/n8n:latest
    container_name: ai-platform-n8n
    ports:
      - "5679:5678"  # Changed to 5679 to avoid conflict with existing n8n on 5678
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=ai_platform_2024
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - GENERIC_TIMEZONE=UTC
      - TZ=UTC
      # Optional: Connect to PostgreSQL for persistence
      # - DB_TYPE=postgresdb
      # - DB_POSTGRESDB_HOST=postgres
      # - DB_POSTGRESDB_PORT=5432
      # - DB_POSTGRESDB_DATABASE=n8n
      # - DB_POSTGRESDB_USER=postgres
      # - DB_POSTGRESDB_PASSWORD=postgres_secure_pass_2024
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # GRAFANA - MONITORING (OPTIONAL)
  # ============================================
  grafana:
    image: grafana/grafana:latest
    container_name: ai-platform-grafana
    ports:
      - "3002:3000"  # Changed to 3002 to avoid conflict with existing Grafana on 3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

volumes:
  ollama_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: ai-platform-network
    driver: bridge

